#include <iostream>
#include <cstring>

using namespace std;

void in(int** f, int m, int n) {
    cout << "   F";
    for(int i = 0; i <= n; i++) {
        printf("%4d", i);
    }
    cout << endl;
    for(int i = 0; i <= m; i++) {
        printf("%4d", i);
        for(int j = 0; j <= n; j++) {
            printf("%4d", f[i][j]);
        }
        cout << endl;
    }
}

int min3(int x, int y, int z) {
    int tmp = x < y ? x : y;
    return z < tmp ? z : tmp;
}

int main() {
    int m, n;
    cin >> m >> n;
    //cout<<"Hello World";
    int **f = new int*[m + 1];
    for(int i = 0; i < m + 1; i++) {
        f[i] = new int[n + 1];
    }
    string X, Y;
    cin >> X >> Y;
    // Khoi Tao
    for(int i = 0; i <= m; i++)
        f[i][0] = i;
    for(int j = 0; j <= n; j++)
        f[0][j] = j;
    for(int i = 1; i <= m; i++) {
        for(int j = 1; j <= n; j++) {
            if(X[i - 1] == Y[j - 1]) {
                f[i][j] = f[i - 1][j - 1];
            } else {
                f[i][j] = min3(f[i][j - 1], f[i - 1][j - 1], f[i - 1][j]) + 1;
            }
        }
    }
    in(f, m, n);
    int count = 0;
    while(m >= -1 && n >= -1) {
        if(X[m - 1] == Y[n - 1]) {
            m--;
            n--;
        } else {
            if(f[m][n] == f[m][n - 1] + 1) {
                if(n > 0) {
                    count++;
                }
                n--;
            } else if(f[m][n] == f[m - 1][n - 1] + 1) {
                if(n > 0 && m > 0) {
                    count++;
                }
                m--;
                n--;
            } else {
                if(m > 0) {
                    count++;
                }
                m--;
            }
        }
    }
    cout << count << endl;
    m = X.length(), n = Y.length();
    while(m >= -1 && n >= -1) {
        //printf("(m, n):(%d, %d)\n", m, n);
        if(X[m - 1] == Y[n - 1]) {
            m--;
            n--;
        } else {
            if(f[m][n] == f[m][n - 1] + 1) {
                if(n > 0) {
                    printf("Insert(%d,%c)\n", m, Y[n - 1]);
                }
                n--;   
            } else if(f[m][n] == f[m - 1][n - 1] + 1) {
                if(n > 0 && m > 0) {
                    printf("Replace(%d,%c)\n", m, Y[n - 1]);
                }
                m--;
                n--;   
            } else {
                if(m > 0) {
                    printf("Delete(%d)\n", m);
                }
                m--;   
            }
        }
    }

    return 0;
}