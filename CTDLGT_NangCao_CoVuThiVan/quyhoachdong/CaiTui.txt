#include <iostream>
#include <vector>

using namespace std;

void in(int** F, int n, int M, int A[], int C[]) {
    cout << "   C   A i/v";
    for(int i = 0; i <= M; i++) {
        printf("%4d", i);
    }
    cout << endl;
    for(int i = 0; i <= n; i++) {
        if(i == 0) {
            cout << "           0";
        } else {
            printf("%4d%4d%4d", C[i - 1], A[i - 1], i);
        }
        for(int j = 0; j <= M; j++) {
            printf("%4d", F[i][j]);
        }
        cout << endl;
    }
}

int main() {
    int n, M;
    cin >> n >> M;
    int A[n], C[n];
    for(int i = 0; i < n; i++) {
        cin >> A[i];
    }
    for(int i = 0; i < n; i++) {
        cin >> C[i];
    }
    //int F[n + 1][M + 1];
    int **F = new int*[n + 1];
    for(int i = 0; i < n + 1; i++) {
        F[i] = new int[M + 1];
    }
    //Tao bang phuong an
    for(int i = 0; i < M + 1; i++) {
        F[0][i] = 0;
    }
    for(int i = 1; i <= n; i++) {
        for(int v = 0; v <= M; v++) {
            F[i][v] = F[i - 1][v];
            if(A[i - 1] <= v && F[i][v] < F[i - 1][v - A[i - 1]] + C[i - 1]) {
                F[i][v] = F[i - 1][v - A[i - 1]] + C[i - 1];
            }
        }
    }
    in(F, n, M, A, C);
    cout<< F[n][M] << endl;
    int v = M;
    vector<int> vec;
    for(int i = n; i > 0; i--) {
        if(F[i][v] != F[i - 1][v]) {
            vec.push_back(i);
            v = v - A[i - 1];
        }
    }
    for(int i = vec.size() - 1; i >= 0; i--) {
        printf("%d(%d,%d) ", vec[i], A[vec[i] - 1], C[vec[i] - 1]);
    }

    return 0;
}