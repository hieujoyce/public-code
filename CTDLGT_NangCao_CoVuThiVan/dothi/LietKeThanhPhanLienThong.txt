#include <iostream>
#include <vector>
#include <bits/stdc++.h>

using namespace std;

void dfs(int visited[], int index, int ** arr, int n, vector<int>& vec) {
    visited[index] = 1;
    vec.push_back(index);
    for(int i = 0; i < n; i++) {
        if(arr[index][i] == 1 && index != i && visited[i] == 0) {
            dfs(visited, i, arr, n, vec);
        }
    }
}

int main() {
    int t;
    cin >> t;
    for(int k = 0; k < t; k++) {
        int n;
        cin >> n;
        int **arr = new int*[n];
        for(int i = 0; i < n; i++) {
            arr[i] = new int[n];
            for(int j = 0; j < n; j++) {
                cin >> arr[i][j];
            }
        }
        int count = 0, visited[n];
        for(int j = 0; j < n; j++) {
                visited[j] = 0;
            }
        for(int i = 0; i < n; i++) {
            if(visited[i] == 0) {
                vector<int> vec;
                count++;
                dfs(visited, i, arr, n, vec);
                sort(vec.begin(), vec.end());
                for(int j = 0; j < vec.size(); j++) {
                    cout << vec[j] << " ";
                }
                cout << endl;
            }
        }
        cout << endl;
    }

    return 0;
}